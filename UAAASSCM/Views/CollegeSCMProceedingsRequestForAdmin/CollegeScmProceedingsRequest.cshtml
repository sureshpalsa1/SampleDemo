@using System.Collections.Concurrent

@model UAAASSCM.Controllers.ScmProceedingsRequest
@{
   // Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    //if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    //{
    //   // Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    //}
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Title = "SCM Proceedings Request";
    int sno = 1;
    string RequestSubmitdate = "";
}

<h2>Selection Committee Request</h2>



<link href="~/Content/themes/base/jquery.ui.base.css" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>

<script>
    $(document).ready(function () {


        //get pdf file size
        function GetNotificationFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                    //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#ScmNotificationSupportDoc")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }


        //get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }


        //change function for pdf doc
        $(function () {
            $(".scmnotificationsupportdocfile").change(function () {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {

                        case 'pdf':
                        case 'PDF':

                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }

                if (flag == false) {
                    $(".scmnotificationsupportdocfiles > span").text("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetNotificationFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $(".scmnotificationsupportdocfiles > span").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $(".scmnotificationsupportdocfiles > span").text("");
                    }
                }

            });
        });


    });
</script>

@if (TempData["Error"] != null)
{
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
}
@if (TempData["Success"] != null)
{
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
}
<br />

@using (Html.BeginForm("CollegeScmProceedingsRequest", "CollegeSCMProceedingsRequestForAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div>
        <table style="width: 100%">
            <tr>
                <td class="col1" style="font-weight: bold; width: 22%;">
                    <span>College</span>
                </td>
                <td class="col2" colspan="1" style="width: 78%;">
                    @Html.DropDownListFor(model=>model.CollegeId,
                        new SelectList(ViewBag.Colleges as System.Collections.IEnumerable, "collegeId", "collegeName"),
                        "--Select--", new {id = "collegeId"})


                </td>
            </tr>

            @if (Model.IsEdit == true)
            {

                <tr>
                    <td class="col1" style="font-weight: bold; width: 22%;">
                        <span>Department *</span>
                    </td>
                    <td class="col2" colspan="2" style="width: 78%;">
                        @Html.DropDownListFor(model => model.SpecializationId,
                            new SelectList(ViewBag.departments as System.Collections.IEnumerable, "SpecializationId", "SpecializationName"),
                            "-- Select --", new {id = "department", style = ""})

                    </td>
                </tr>
                <tr>
                    <td class="col1" style="font-weight: bold; width: 22%;">
                        <span>Total No of Faculty Required As For AICTE *</span>
                    </td>
                    <td class="col2" colspan="2" style="width: 78%;">
                        @Html.TextBoxFor(model=>model.TotalFacultyRequired,new{@placeholder = "Total No of Faculty Required", @minlength = "1", @maxlength = "3",@style="width:260px"})
                    </td>
                </tr>

                <tr>
                    <td colspan="3">
                        <table class="faculty_table" style="text-align: center; width: 100%">
                            <tr>
                                <td class="col1" style="font-weight: bold; width: 30%;">
                                    <span>Faculty Type</span>
                                </td>
                                <td class="col1" style="width: 30%; font-weight: bold">
                                    <span>Number of Available Faculty</span>
                                </td>
                                <td class="col1" style="width: 40%; font-weight: bold">
                                    <span>Number of Required Faculty</span>
                                </td>
                            </tr>
                            <tr>
                                <td class="col1" style="font-weight: bold; width: 30%;">
                                    <span>@Html.LabelFor(model => model.ProfessorVacancies) *</span>
                                </td>
                                <td class="col2" style="width: 35%;">
                                    @Html.TextBoxFor(model => model.ProfessorVacancies, new {@placeholder = "Available Professor", @minlength = "1", @maxlength = "2"})
                                    @Html.ValidationMessageFor(model => model.ProfessorVacancies)
                                </td>
                                <td class="col2" style="width: 35%;">
                                    @Html.TextBoxFor(model => model.RequiredProfessorVacancies, new {@placeholder = "Required Professor", @minlength = "1", @maxlength = "2"})
                                    @Html.ValidationMessageFor(model => model.RequiredProfessorVacancies)
                                </td>
                            </tr>
                            <tr>
                                <td class="col1" style="font-weight: bold; width: 30%;">
                                    <span>@Html.LabelFor(model => model.AssociateProfessorVacancies) *</span>
                                </td>
                                <td class="col2" style="width: 35%;">
                                    @Html.TextBoxFor(model => model.AssociateProfessorVacancies, new {@placeholder = "Available Associate Professor", @minlength = "1", @maxlength = "2"})
                                    @Html.ValidationMessageFor(model => model.AssociateProfessorVacancies)
                                </td>
                                <td class="col2" style="width: 35%;">
                                    @Html.TextBoxFor(model => model.RequiredAssociateProfessorVacancies, new {@placeholder = "Required Associate Professor", @minlength = "1", @maxlength = "2"})
                                    @Html.ValidationMessageFor(model => model.RequiredAssociateProfessorVacancies)
                                </td>
                            </tr>
                            <tr>
                                <td class="col1" style="font-weight: bold; width: 30%;">
                                    <span>@Html.LabelFor(model => model.AssistantProfessorVacancies) *</span>
                                </td>
                                <td class="col2" style="width: 35%;">
                                    @Html.TextBoxFor(model => model.AssistantProfessorVacancies, new {@placeholder = "Available Assistant Professor", @minlength = "1", @maxlength = "2"})
                                    @Html.ValidationMessageFor(model => model.AssistantProfessorVacancies)
                                </td>
                                <td class="col2" style="width: 35%;">
                                    @Html.TextBoxFor(model => model.RequiredAssistantProfessorVacancies, new {@placeholder = "Required Assistant Professor", @minlength = "1", @maxlength = "2"})
                                    @Html.ValidationMessageFor(model => model.RequiredAssistantProfessorVacancies)
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>

                <tr>
                    <td class="col1" style="font-weight: bold; width: 22%; vertical-align: middle">
                        <span>Reason for New Staff Selection Committee</span>
                    </td>
                    <td class="col2" colspan="2" style="width: 78%;">
                        @Html.TextAreaFor(model => model.Remarks, new {@style = "resize:none", @rows = "2", @cols = "3", @maxlength = "450"})

                    </td>
                </tr>
                <tr style="display:none">
                    <td class="col1" style="font-weight: bold; width:22%; vertical-align: middle">
                        <span>Paper Notification Date</span>
                    </td>
                    <td class="col2" colspan="2" style="width: 78%;">
                        @Html.TextBoxFor(model => model.NotificationDate, new {style = "width:200px", @class = "calendar"})

                    </td>
                </tr>
    <tr style="display:none">
        <td class="col1" style="font-weight: bold; width: 30%; vertical-align: middle; height: 30px">
            <div>
                <span>
                    Paper Notification *
                    <br />
                    <span style="color: blue;">(PDF should be less than 1MB size)</span>
                </span>
            </div>
        </td>
        <td class="col2" colspan="2" style="width: 85%; height: 20px">
            <div class="editor-field scmnotificationsupportdocfiles">
                @Html.TextBoxFor(model => model.ScmNotificationSupportDoc, new { type = "file", @class = "scmnotificationsupportdocfile" })

                <br />
                <span style="color: red;"></span>
            </div><br /><br />

        </td>
    </tr>
            }
        </table>
        @if (Model.IsEdit == true)
        {
            <div style="text-align: right">
                    <p style="text-align: right">
                        <input type="submit" value="Submit" id="btnsend" name="cmd" />
                    </p>
                </div>
        }
    </div>
}
@using (Html.BeginForm("CollegeScmPrint", "CollegeSCMProceedingsRequestForAdmin", FormMethod.Post, new { }))
{
    if (Model.IsEdit == true)
    {
        <div style="margin-top: 20px;">

                <h2>Selection Committee Request List</h2><br/>
                @*<p style="text-align: right">
                    <input type="submit" class="create_button" value="Print" id="btn_print" name="cmd"/>
                </p>*@
                <table class="webGrid">
                    <thead>
                    <tr class="gridHeader">
                        <th>S.No.</th>
                        @*<th>Print</th>*@
                        @*<th>College</th>*@
                        <th>Specialization</th>
                        <th>Available Prof </th>
                        <th>Available Assoc.Prof</th>
                        <th>Available Assist.Prof</th>
                        <th>Required Prof</th>
                        <th>Required Assoc.Prof</th>
                        <th>Required Assist.Prof</th>
                        <th style="width: 100px">Request Submited Date</th>
                        <th style="width: 105px">View Faculty</th>
                        @*<th style="width: 105px">Download</th>*@
                    </tr>
                    </thead>
                    <tbody style="background: #FCF1D1;">
                    @for (int i = 0; i < Model.ScmProceedingsRequestslist.Count(); i++)
                    {
                        if (Model.ScmProceedingsRequestslist[i].RequestSubmittedDate != null)
                        {

                            RequestSubmitdate = UAAAS.Models.Utilities.MMDDYY2DDMMYY(@Model.ScmProceedingsRequestslist[i].RequestSubmittedDate.ToString());
                        }
                        else
                        {
                            RequestSubmitdate = "--";
                        }
                        <tr>
                            <td style="text-align: center">
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].Id)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].CollegeId)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].CollegeName)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].CollegeCode)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].SpecializationId)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].SpecializationName)
                                @*@Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].ProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].AssociateProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].AssistantProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].RequiredProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].RequiredAssistantProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].RequiredAssociateProfessorVacancies)*@
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].Professors)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].AssociateProfessors)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].AssistantProfessors)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].RequiredProfessors)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].RequiredAssistantProfessors)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].RequiredAssociateProfessors)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].ScmNotificationpath)
                                @(i + 1)
                            </td>
                            @*<td>@Html.CheckBoxFor(m => m.ScmProceedingsRequestslist[i].Checked, new {name = "Options"})</td>*@
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].SpecializationName)</td>
                            @*<td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].ProfessorVacancies)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].AssociateProfessorVacancies)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].AssistantProfessorVacancies)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].RequiredProfessorVacancies)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].RequiredAssociateProfessorVacancies)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].RequiredAssistantProfessorVacancies)</td>*@
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].Professors)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].AssociateProfessors)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].AssistantProfessors)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].RequiredProfessors)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].RequiredAssociateProfessors)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].RequiredAssistantProfessors)</td>
                            @*<td style="text-align: center; vertical-align: middle;">
                                    @if (!string.IsNullOrEmpty(Model.ScmProceedingsRequestslist[i].ScmNotificationpath))
                                    {
                                        <span><a href="../Content/Upload/SCMPROCEEDINGSREQUEST/ScmNotificationDocuments/@Model.ScmProceedingsRequestslist[i].ScmNotificationpath" target="_blank"><span style="font-weight: bold; color: red">View</span></a></span>
                                    }
                                </td>*@
                            @*<td style="width: 100px; text-align: center">
                                @Html.ActionLink("Add", "AddRegistrationNumber", "CollegeSCMProceedingsRequestForAdmin", new { @id = Model.ScmProceedingsRequestslist[i].Id }, new { @id = "openDialog", @class = "openDialog create_button" })
                            </td>*@

                            <td style="width: 100px; text-align: center">
                                @RequestSubmitdate
                            </td>
                            <td style="width: 105px; text-align: center">
                                @Html.ActionLink("View", "ViewFaculty", "CollegeSCMProceedingsRequestForAdmin", new { @scmid = Model.ScmProceedingsRequestslist[i].Id }, new { @class = "view_button", @target = "_blank" })
                                
                            </td>
                            @*<td style="width: 105px; text-align: center">
                                <a href='@Url.Action("CollegeFacultyDetailsPrint", "SCMReports", new { collegeId = Model.ScmProceedingsRequestslist[i].CollegeId, @scmid = Model.ScmProceedingsRequestslist[i].Id })' target="_blank" title="Click here for SCM Download">
                                    <img src="@Url.Content("../../Content/images/pdf.png")" alt="SCM Download" height="18">
                                </a>
                            </td>*@

                        </tr>
                    }
                    </tbody>
                </table>
            </div>
       
    }
}



<div id="dialog-edit">
</div>
<script>
    $(document).ready(function () {


        $("#NotificationDate").val('01/01/2011');

    //    var mainUrl = window.location;
    //    var url;

    //    $.ajaxSetup({ cache: false });

    //    var $myDialog = $("#dialog-edit").dialog({
    //        title: 'Add Registration Number',
    //        autoOpen: false,
    //        resizable: false,
    //        height: 350,
    //        width: 640,
    //        show: { effect: 'drop', direction: "up" },
    //        modal: true,
    //        draggable: true,
    //        closeOnEscape: true,
    //        open: function (event, ui) {
    //            $(this).load(url);
    //        },
    //        close: function (event, ui) {
    //            $(this).dialog("close");
    //        }
    //    });
    //    $("#openDialog").live("click", function (e) {
    //        debugger;
    //        // e.preventDefault();
    //        url = $(this).attr('href');
    //        $("#dialog-edit").dialog({
    //            title: 'Add Registration Number'
    //        });
    //        //  url = $("#openDialog").attr('href');
    //        $myDialog.dialog('open');
    //        return false;
    //    });
    //    $($myDialog).bind("dialogclose", function () {
    //        window.location = mainUrl;
    //    });

        $(".openDialog").on("click", function (e) {
            // e.preventDefault();
            debugger;
           // alert();
            var url = $(this).attr('href');
            $("#dialog-edit").dialog({
                title: 'Add Registration Number',
               // autoOpen: false,
                resizable: false,
                height: 350,
                width: 640,
                show: { effect: 'drop', direction: "up" },
                modal: true,
                draggable: true,
                closeOnEscape: true,
                open: function (event, ui) {
                    $(this).load(url);
                },
                close: function (event, ui) {
                    $(this).dialog("close");
                }
            });
            return false;
        });
    });

    $('#collegeId').change(function () {
        debugger;
        var collegeId = $(this).val();
        if ($('#collegeId').val() != '') {
            window.location = '/CollegeSCMProceedingsRequestForAdmin/CollegeScmProceedingsRequest?CollegeId=' + collegeId;
        }
        else {
            window.location = '/CollegeSCMProceedingsRequestForAdmin/CollegeScmProceedingsRequest';
        }
    });




   


</script>
<style>
    .webGrid a:link, .webGrid a:visited {
        color: white;
        text-decoration: none;
    }
    .col1 {
        width: 22%;
    }
</style>