

@model UAAAS.Controllers.College.Scmuploads
@{
    //Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    //if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    //{
    //    Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    //}
    Layout = "~/Views/Shared/_Layout1.cshtml";
    ViewBag.Title = "SCM Upload";
    int sno = 1;
    string SCMDATEFormat = string.Empty;
}

<h2>SCM Upload</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>


@if (TempData["Error"] != null)
    {
    <div class="error">
        <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
    </div>
    }
@if (TempData["Success"] != null)
    {
    <div class="success">
        <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
    </div>
    }
<br />
<p style="text-align: right; font-style: italic; color: red; padding-right: 5px;">
    * - marked fields are mandatory
</p>
@using (Html.BeginForm("SCMUpload", "CollegeSCMProceedingsRequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div>
        <table class="faculty_table" style="text-align: center; width: 100%">
            <tr>
                <td class="col1" style="font-weight: bold; width: 30%;"><span>College * </span></td>
                <td class="col2" colspan="2" style="width: 70%;">

                    @Html.DropDownListFor(model => model.CollegeId,
  new SelectList(ViewBag.Colleges as System.Collections.IEnumerable, "collegeId", "collegeName"),
             "-- Select --", new { id = "collegeId", style = "width: 40%" })
                </td>
            </tr>
            @if (ViewBag.departments!= null)
            {
                <tr>
                    <td class="col1" style="font-weight: bold; width: 30%;">
                        <span>Department *</span>
                    </td>
                    <td class="col2" colspan="2" style="width: 70%;">
                        @Html.DropDownListFor(model => model.SpecializationId,
                            new SelectList(ViewBag.departments as System.Collections.IEnumerable, "SpecializationId", "SpecializationName"),
                            "-- Select --", new {id = "department", style = "width: 40%"})

                    </td>
                </tr>
                <tr>
                    <td class="col1" style="font-weight: bold; width: 30%;">
                        <span>Designation *</span>
                    </td>
                    <td class="col2" colspan="2" style="width: 70%;">
                        @Html.DropDownListFor(model => model.Designation,
                      new SelectList(ViewBag.Designations as System.Collections.IEnumerable, "Id", "Name"),
                            "-- Select --", new {id = "designation", style = "width: 40%"})

                    </td>
                </tr>
                <tr>
                    <td class="col1" style="font-weight: bold; width: 30%;">
                        <span>SCM Date *</span>
                    </td>
                    <td class="col2" colspan="2" style="width: 70%;">
                        @Html.TextBoxFor(model => model.ScmDate, new {style = "width:200px", @class = "calendar", @placeholder = "DD/MM/YYYY", @required = true})
                    </td>
                </tr>
                <tr>
                    <td class="col1" style="font-weight: bold; width: 30%; vertical-align: middle">
                        <span>Professors SCM Document</span>
                        <br/>
                        <span style="color: blue;">(PDF should be less than 1MB size)</span>
                    </td>
                    <td class="col2" colspan="2" style="width: 70%;">
                        <div class="editor-field ProfessorDocuments">
                            @Html.TextBoxFor(model => model.ProfessorDocument, new {type = "file", @class = "ProfessorDocument"})
                            <br/>
                            <span style="color: red;"></span>
                        </div>

                    </td>
                </tr>
                <tr>
                    <td class="col1" style="font-weight: bold; width: 30%; vertical-align: middle">
                        <span>Associate Professor SCM Document</span>
                        <br/>
                        <span style="color: blue;">(PDF should be less than 1MB size)</span>
                    </td>
                    <td class="col2" colspan="2" style="width: 70%;">
                        <div class="editor-field AssociateProfessorDocuments">
                            @Html.TextBoxFor(model => model.AssociateProfessorDocument, new {type = "file", @class = "AssociateProfessorDocument"})
                            <br/>
                            <span style="color: red;"></span>
                        </div>

                    </td>
                </tr>
                <tr>
                    <td class="col1" style="font-weight: bold; width: 30%; vertical-align: middle">
                        <span>Assistant Professor SCM Document</span>
                        <br/>
                        <span style="color: blue;">(PDF should be less than 1MB size)</span>
                    </td>
                    <td class="col2" colspan="2" style="width: 70%;">
                        <div class="editor-field AssistantProfessorDocuments">
                            @Html.TextBoxFor(model => model.AssistantProfessorDocument, new {type = "file", @class = "AssistantProfessorDocument"})
                            <br/>
                            <span style="color: red;"></span>
                        </div>
                    </td>
                </tr>
            }
        </table>
            @if (ViewBag.departments != null)
            {
                <div style="text-align: right">
                    <p style="text-align: right">
                        <input type="submit" value="Submit" id="btnsend" name="cmd"/>
                    </p>
                </div>
            }
    </div>
}

@*@using (Html.BeginForm("", "", FormMethod.Post, new {}))
{
    if (ViewBag.SCMUPLOADEDDATA.Count != 0)
    {
        <div style="margin-top: 20px;">
           
            <h2>SCM Uploaded List</h2><br/>
           
            <table id="example" class="display" style="width: 100%">
                <thead>
                    <tr>
                        <th>S.No.</th>
                        <th>Branch/Specialization</th>
                        <th>SCM Date</th>
                        <th style="text-align: center">Professor </th>
                        <th style="text-align: center">Associate Professor</th>
                        <th style="text-align: center">Assistant Professor </th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var item in ViewBag.SCMUPLOADEDDATA)
                {
                    SCMDATEFormat = "";
                    if (@item.ScmDateView != null)
                    {
                        SCMDATEFormat = UAAAS.Models.Utilities.MMDDYY2DDMMYY(@item.ScmDateView.ToString());
                    }

                    <tr>
                        <td>
                            @(sno++)
                            @Html.HiddenFor(m => m.CollegeId)
                            @Html.HiddenFor(m => m.SpecializationId)
                            @Html.HiddenFor(m => m.DegreeId)
                            @Html.HiddenFor(m => m.DepartmentId)
                        </td>
                        <td>@item.SpecializationName</td>
                        <td>@SCMDATEFormat</td>
                        <td style="text-align: center">
                            @if (!string.IsNullOrEmpty(item.ProfessorDocumentView))
                            {
                                <a href="../Content/Upload/SCMUploads/@item.ProfessorDocumentView" target="_blank" class="">
                                    <img src="@Url.Content("../../Content/images/pdf.png")" alt="Professor" height="18">
                                </a>
                            }
                            else
                            {
                                <span>---</span>
                            }

                        </td>
                        <td style="text-align: center">
                            @if (!string.IsNullOrEmpty(item.AssociateProfessorDocumentView))
                            {
                                <a href="../Content/Upload/SCMUploads/@item.AssociateProfessorDocumentView" target="_blank">
                                    <img src="@Url.Content("../../Content/images/pdf.png")" alt="Associate Professor" height="18">
                                </a>
                            }
                            else
                            {
                                <span>---</span>
                            }

                        </td>
                        <td style="text-align: center">
                            @if (!string.IsNullOrEmpty(item.AssistantProfessorDocumentView))
                            {
                                <a href="../Content/Upload/SCMUploads/@item.AssistantProfessorDocumentView" target="_blank">
                                    <img src="@Url.Content("../../Content/images/pdf.png")" alt="Assistant Professor" height="18">
                                </a>
                            }
                            else
                            {
                                <span>---</span>
                            }

                        </td>
                    </tr>
                }
                </tbody>
                <tfoot>
                    <tr>
                        <th>
                            <input type="text" id="i-0" style="width: 90%; text-align: left; display: none;" class="search_init">
                        </th>
                        <th>
                            <input type="text" id="i-1" style="width: 60%; text-align: left;" class="search_init">
                        </th>
                        <th>
                            <input type="text" id="i-2" style="width: 90%; text-align: left;" class="search_init">
                        </th>
                        <th class=" ui-state-default">
                            <input type="text" id="i-3" style="width: 90%; text-align: left; display: none;" class="search_init">
                        </th>
                        <th class=" ui-state-default">
                            <input type="text" id="i-4" style="width: 90%; text-align: left; display: none;" class="search_init">
                        </th>
                        <th class=" ui-state-default">
                            <input type="text" id="i-6" style="width: 90%; text-align: left; display: none;" class="search_init">
                        </th>
                        @*<th style="width: 60px;" class=" ui-state-default">
                            <input type="text" id="i-8" style="width: 90%; text-align: left; display: none;" class="search_init">
                       </th>
                        <th class=" ui-state-default">
                            <input type="text" id="i-10" style="width: 50%; text-align: left; display: none;" class="search_init">
                        </th>
                        <th class=" ui-state-default">
                            <input type="text" id="i-11" style="width: 90%; text-align: left;display: none;" class="search_init">
                        </th>
                       
                        <th class=" ui-state-default">
                            <input type="text" id="i-14" style="width: 80%; text-align: left; display: none;" class="search_init">
                        </th>
                    </tr>
                </tfoot>
            </table>
        </div>
    }
}*@






<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>
<script type="text/javascript">
    var asInitVals = new Array();
    $(document).ready(function() {

        /* Initialize table and make first column non-sortable*/
        var oTable = $('#example').dataTable({
            "bJQueryUI": true,
            "iDisplayLength": 5000,
            "bStateSave": false,
            "sDom": '<"top"lfip>rt<"bottom"ip<"clear">',
            //"sPaginationType": "full_numbers",
            "oLanguage": {
                "sSearch": "Search all columns:",
                "oPaginate": {
                    "sFirst": "",
                    "sLast": "",
                    "sNext": "",
                    "sPrevious": ""
                }
            },
            "fnInitComplete": function() {
                var oSettings = $('#example').dataTable().fnSettings();
                for (var i = 0; i < oSettings.aoPreSearchCols.length; i++) {
                    if (oSettings.aoPreSearchCols[i].sSearch.length > 0) {
                        $("tfoot input")[i].value = oSettings.aoPreSearchCols[i].sSearch;
                        $("tfoot input")[i].className = "";
                    }
                }
            },
            "aoColumns": [{ "bSortable": true, "bSearchable": true }, null, null, null, null, null],
            //"aoColumns": [{ type: "select", values: ['Gecko', 'Trident', 'KHTML', 'Misc', 'Presto', 'Webkit', 'Tasman'] },{ type: "text" },null,{ type: "number" },{ type: "select" }]
        });
        /*
         * Support functions to provide a little bit of 'user friendlyness' to the textboxes in
         * the footer
         */
        $("tfoot input").each(function(i) {
            asInitVals[i] = this.value;
        });
        $("tfoot input").focus(function() {
            if (this.className == "search_init") {
                this.className = "";
                this.value = "";
            }
        });
        $("tfoot input").blur(function(i) {
            if (this.value == "") {
                this.className = "search_init";
                this.value = asInitVals[$("tfoot input").index(this)];
            }
        });

        $("tfoot input").keyup(function() {
            /* Filter on the column (the index) of this element */
            oTable.fnFilter(this.value, $("tfoot input").index(this));
        });


//get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }


        //get Professor pdf file size
        function GetNotificationFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#ProfessorDocument")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //change function for Professor pdf doc
        $(".ProfessorDocument").change(function() {
            debugger;
            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {

                case 'pdf':
                case 'PDF':

                    flag = true;
                    break;
                default:
                    flag = false;
                }
            }

            if (flag == false) {
                $(".ProfessorDocuments > span").text("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetNotificationFileSize(file);
                size = size / 1048576;
                if (size > 1) {
                    $(".ProfessorDocuments > span").text("Document should not exceed 1 MB in Size");
                    $(this).val('');
                } else {

                    $(".ProfessorDocuments > span").text("");
                }
            }

        });

        //get Associate Professor pdf file size
        function GetAssociateProfessorFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#AssociateProfessorDocument")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //change function for Associate Professor pdf doc
        $(".AssociateProfessorDocument").change(function() {
            debugger;
            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {

                case 'pdf':
                case 'PDF':

                    flag = true;
                    break;
                default:
                    flag = false;
                }
            }

            if (flag == false) {
                $(".AssociateProfessorDocuments > span").text("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetAssociateProfessorFileSize(file);
                size = size / 1048576;
                if (size > 1) {
                    $(".AssociateProfessorDocuments > span").text("Document should not exceed 1 MB in Size");
                    $(this).val('');
                } else {

                    $(".AssociateProfessorDocuments > span").text("");
                }
            }

        });


        //get Assistant Professor pdf file size
        function GetAssistantProfessorFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb
                    // fileSize = fileSize / 1048576; //size in mb
                    alert(fileSize);
                }
                //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#AssistantProfessorDocument")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }

        //change function for Assistant Professor pdf doc
        $(".AssistantProfessorDocument").change(function() {
            debugger;
            var file = getNameFromPath($(this).val());
            var flag;
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {

                case 'pdf':
                case 'PDF':

                    flag = true;
                    break;
                default:
                    flag = false;
                }
            }

            if (flag == false) {
                $(".AssistantProfessorDocuments > span").text("You can upload only  PDF files");
                $(this).val('');
                return false;
            } else {
                var size = GetAssistantProfessorFileSize(file);
                size = size / 1048576;
                if (size > 1) {
                    $(".AssistantProfessorDocuments > span").text("Document should not exceed 1 MB in Size");
                    $(this).val('');
                } else {

                    $(".AssistantProfessorDocuments > span").text("");
                }
            }

        });


    });

    $("#collegeId").change(function () {
        var collegeId = $(this).val();
        if (collegeId !== "") {
            window.location = '/CollegeSCMProceedingsRequest/SCMUpload?collegeId=' + collegeId;
        } else {
            window.location = '/CollegeSCMProceedingsRequest/SCMUpload';
        }
    });

</script>