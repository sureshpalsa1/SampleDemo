@using System.Collections.Concurrent

@model UAAAS.Controllers.College.ScmProceedingsRequest
@{
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
    if (Roles.IsUserInRole("Admin") || Roles.IsUserInRole("DataEntry"))
    {
        Layout = "~/Views/Shared/_DataEntryLayoutLeftMenu.cshtml";
    }
    ViewBag.Title = "SCM Proceedings Request";
    int sno = 1;
    string requestDate = string.Empty;
}

<h2>Selection Committee Request</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Validations.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jspdf.plugin.from_html.js")" type="text/javascript"></script>

<script>
    $(document).ready(function() {


        //get pdf file size
        function GetNotificationFileSize(fileid) {
            try {
                var fileSize = 0;
                //for IE
                if ($.browser.msie) {
                    //before making an object of ActiveXObject, //please make sure ActiveX is enabled in your IE browser
                    var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                    var filePath = $("#" + fileid)[0].value;
                    var objFile = objFSO.getFile(filePath);
                    var fileSize = objFile.size; //size in kb
                    //alert(fileSize);
                    //fileSize = fileSize / 1048576; //size in mb 
                    // fileSize = fileSize / 1048576; //size in mb 
                    alert(fileSize);
                }
                //for FF, Safari, Opeara and Others
                else {
                    fileSize = $("#ScmNotificationSupportDoc")[0].files[0].size; //size in kb
                    //fileSize = fileSize / 1048576; //size in mb 
                }
                return fileSize;
            } catch (e) {

                //alert("Error is : " + e);
            }
        }


//get file path from client system
        function getNameFromPath(strFilepath) {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            } else {
                return strName[0];
            }
        }


//change function for pdf doc
        $(function() {
            $(".scmnotificationsupportdocfile").change(function() {

                var file = getNameFromPath($(this).val());
                var flag;
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {

                    case 'pdf':
                    case 'PDF':

                        flag = true;
                        break;
                    default:
                        flag = false;
                    }
                }

                if (flag == false) {
                    $(".scmnotificationsupportdocfiles > span").text("You can upload only  PDF files");
                    $(this).val('');
                    return false;
                } else {
                    var size = GetNotificationFileSize(file);
                    size = size / 1048576;
                    if (size > 1) {
                        $(".scmnotificationsupportdocfiles > span").text("Document should not exceed 1 MB in Size");
                        $(this).val('');
                    } else {

                        $(".scmnotificationsupportdocfiles > span").text("");
                    }
                }

            });
        });


    });
</script>

@if (TempData["Error"] != null)
    {
<div class="error">
    <p><strong>Error:</strong> @TempData["Error"].ToString()</p>
</div>
    }
    @if (TempData["Success"] != null)
    {
<div class="success">
    <p><strong>Success:</strong> @TempData["Success"].ToString()</p>
</div>
    }
<br />

@using (Html.BeginForm("CollegeScmProceedingsRequest", "CollegeSCMProceedingsRequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div>
        <table class="faculty_table" style="text-align: center; width: 100%">
            <tr>
                <td class="col1" style="font-weight: bold; width: 15%;">
                    <span>Department *</span>
                </td>
                <td class="col2" colspan="2" style="width: 85%;">
                    @Html.DropDownListFor(model => model.SpecializationId,
                        new SelectList(ViewBag.departments as System.Collections.IEnumerable, "SpecializationId", "SpecializationName"),
                        "-- Select --", new {id = "department", style = ""})

                </td>
            </tr>
            @*<tr>
                <td class="col1" style="font-weight: bold; width: 15%;">
                    <span>Specialization *</span>
                </td>
                <td class="col2" style="width: 85%;">
                    @Html.DropDownListFor(model => model.SpecializationId,
  new SelectList(ViewBag.specializations as System.Collections.IEnumerable, "SpecializationId", "SpecializationName"),
                        "-- Select --", new {id = "specialization", style = "",required=false})

                </td>
            </tr>*@

            <tr>
                <td colspan="3">
                    <table class="faculty_table" style="text-align: center; width: 100%">
                        <tr>
                            <td class="col1" style="font-weight: bold; width: 30%;">
                                <span>Faculty Type</span>
                            </td>
                            <td class="col1" style="width: 30%; font-weight: bold">
                                <span>Number of Available Faculty</span>
                            </td>
                            <td class="col1" style="width: 40%; font-weight: bold">
                                <span>Number of Required Faculty</span>
                            </td>
                        </tr>
                        <tr>
                            <td class="col1" style="font-weight: bold; width: 30%;">
                                <span>@Html.LabelFor(model => model.ProfessorVacancies) *</span>
                            </td>
                            <td class="col2" style="width: 35%;">
                                @Html.TextBoxFor(model => model.ProfessorVacancies, new { @placeholder = "Available Professor", @minlength = "1", @maxlength = "2" })
                                @Html.ValidationMessageFor(model => model.ProfessorVacancies)
                            </td>
                            <td class="col2" style="width: 35%;">
                                @Html.TextBoxFor(model => model.RequiredProfessorVacancies, new { @placeholder = "Required Professor", @minlength = "1", @maxlength = "2" })
                                @Html.ValidationMessageFor(model => model.RequiredProfessorVacancies)
                            </td>
                        </tr>
                        <tr>
                            <td class="col1" style="font-weight: bold; width: 30%;">
                                <span>@Html.LabelFor(model => model.AssociateProfessorVacancies) *</span>
                            </td>
                            <td class="col2" style="width: 35%;">
                                @Html.TextBoxFor(model => model.AssociateProfessorVacancies, new { @placeholder = "Available Associate Professor", @minlength = "1", @maxlength = "2" })
                                @Html.ValidationMessageFor(model => model.AssociateProfessorVacancies)
                            </td>
                            <td class="col2" style="width: 35%;">
                                @Html.TextBoxFor(model => model.RequiredAssociateProfessorVacancies, new { @placeholder = "Required Associate Professor", @minlength = "1", @maxlength = "2" })
                                @Html.ValidationMessageFor(model => model.RequiredAssociateProfessorVacancies)
                            </td>
                        </tr>
                        <tr>
                            <td class="col1" style="font-weight: bold; width: 30%;">
                                <span>@Html.LabelFor(model => model.AssistantProfessorVacancies) *</span>
                            </td>
                            <td class="col2" style="width: 35%;">
                                @Html.TextBoxFor(model => model.AssistantProfessorVacancies, new { @placeholder = "Available Assistant Professor", @minlength = "1", @maxlength = "2" })
                                @Html.ValidationMessageFor(model => model.AssistantProfessorVacancies)
                            </td>
                            <td class="col2" style="width: 35%;">
                                @Html.TextBoxFor(model => model.RequiredAssistantProfessorVacancies, new {@placeholder = "Required Assistant Professor", @minlength = "1", @maxlength = "2"})
                                @Html.ValidationMessageFor(model => model.RequiredAssistantProfessorVacancies)
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>

            <tr>
                <td class="col1" style="font-weight: bold; width: 15%; vertical-align: middle">
                    <span >Reason for New Staff Selection Committee</span>
                </td>
                <td class="col2" colspan="2" style="width: 85%;">
                    @Html.TextAreaFor(model => model.Remarks, new {@style = "resize:none", @rows = "2", @cols = "3", @maxlength = "450"})

                </td>
            </tr>
            <tr>
                <td class="col1" style="font-weight: bold; width: 15%; vertical-align: middle">
                    <span>Paper Notification Date</span>
                </td>
                <td class="col2" colspan="2" style="width: 85%;">
                    @Html.TextBoxFor(model => model.NotificationDate, new { style = "width:200px", @class = "calendar" })

                </td>
            </tr>
            <tr>
                <td class="col1" style="font-weight: bold; width: 30%; vertical-align: middle; height: 30px">
                    <div >
                        <span>
                          Paper Notification *
                            <br />
                            <span style="color: blue;">(PDF should be less than 1MB size)</span>
                        </span>
                    </div>
                </td>
                <td class="col2" colspan="2" style="width: 85%; height: 20px">
                    <div class="editor-field scmnotificationsupportdocfiles">
                        @Html.TextBoxFor(model => model.ScmNotificationSupportDoc, new {type = "file", @class = "scmnotificationsupportdocfile", @required = "true"})

                        <br/>
                        <span style="color: red;"></span>
                    </div><br/><br/>

                </td>
            </tr>
            @*<tr>
                <td >
                    <div style="width: 200%; text-align: right">
                        <p style="text-align: right" >
                            <input type="submit" value="Submit" id="btnsend" name="cmd" />
                        </p>
                    </div>
                </td>
            </tr>*@
        </table>

        <div style="text-align: right">
            <p style="text-align: right">
                <input type="submit" value="Submit" id="btnsend" name="cmd" />
            </p>
        </div>
    </div>
}
@using (Html.BeginForm("CollegeScmPrint", "CollegeSCMProceedingsRequest", FormMethod.Post, new { }))
{
    
    if (ViewBag.collegescmrequestslist.Count != 0)
    {
        <div style="margin-top: 20px;">
           
            <h2>Selection Committee Request List</h2><br/>
            <p style="text-align: right">
                <input type="submit" class="create_button" value="Print" id="btn_print" name="cmd" />
            </p>
            <table class="webGrid">
                <thead>
                    <tr class="gridHeader">
                        <th>S.No.</th>
                        <th>Print</th>
                        @*<th>College</th>*@
                        <th>Specialization</th>
                        <th>Available Prof </th>
                        <th>Available Assoc.Prof</th>
                        <th>Available Assist.Prof</th>
                        <th>Required Prof</th>
                        <th>Required Assoc.Prof</th>
                        <th>Required Assist.Prof</th>
                        <th>Request Date</th>
                        <th style="width:100px">Add Faculty</th>
                        <th style="width:105px">View Faculty</th>
                    </tr>
                </thead>
                <tbody style="background: #FCF1D1;">
                    @for (int i = 0; i < Model.ScmProceedingsRequestslist.OrderByDescending(e=>e.CreatedDate).Count(); i++)
                    {
                        if (Model.ScmProceedingsRequestslist[i].CreatedDate!=null)
                        {
                            requestDate = UAAAS.Models.Utilities.MMDDYY2DDMMYY(Model.ScmProceedingsRequestslist[i].CreatedDate.ToString());
                        }

                        <tr>
                            <td style="text-align:center">
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].Id)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].CollegeId)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].CollegeName)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].CollegeCode)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].SpecializationId)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].SpecializationName)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].ProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].AssociateProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].AssistantProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].RequiredProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].RequiredAssistantProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].RequiredAssociateProfessorVacancies)
                                @Html.HiddenFor(m => m.ScmProceedingsRequestslist[i].ScmNotificationpath)
                                @(i + 1)
                            </td>
                            <td>@Html.CheckBoxFor(m => m.ScmProceedingsRequestslist[i].Checked, new { name = "Options" })</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].SpecializationName)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].ProfessorVacancies)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].AssociateProfessorVacancies)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].AssistantProfessorVacancies)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].RequiredProfessorVacancies)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].RequiredAssociateProfessorVacancies)</td>
                            <td>@Html.DisplayFor(m => m.ScmProceedingsRequestslist[i].RequiredAssistantProfessorVacancies)</td>
                            <td>@requestDate</td>
                            @*<td style="text-align: center; vertical-align: middle;">
                            @if (!string.IsNullOrEmpty(Model.ScmProceedingsRequestslist[i].ScmNotificationpath))
                            {
                                <span><a href="../Content/Upload/SCMPROCEEDINGSREQUEST/ScmNotificationDocuments/@Model.ScmProceedingsRequestslist[i].ScmNotificationpath" target="_blank"><span style="font-weight: bold; color: red">View</span></a></span>
                            }
                        </td>*@
                            <td style="width: 100px;text-align:center">
                                @Html.ActionLink("Add", "AddRegistrationNumber", "CollegeSCMProceedingsRequest", new { @id = Model.ScmProceedingsRequestslist[i].Id }, new { @id = "openDialog", @class = "create_button" })
                            </td>
                            <td style="width: 105px; text-align: center">
                                @Html.ActionLink("View", "ViewFaculty", "CollegeSCMProceedingsRequest", new { @scmid = Model.ScmProceedingsRequestslist[i].Id }, new { @class = "view_button", @target = "_blank" })
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}



<div id="dialog-edit">
</div>
<script>
    $(document).ready(function () {

        



        var mainUrl = window.location;
        var url;

        $.ajaxSetup({ cache: false });

        var $myDialog = $("#dialog-edit").dialog({
            title: 'Add Registration Number',
            autoOpen: false,
            resizable: false,
            height: 350,
            width: 640,
            show: { effect: 'drop', direction: "up" },
            modal: true,
            draggable: true,
            closeOnEscape: true,
            open: function (event, ui) {
                $(this).load(url);
                
            },
            close: function (event, ui) {
                $(this).dialog("close");
            }
        });
        $("#openDialog").live("click", function (e) {
           // e.preventDefault();
            url = $(this).attr('href');
            $("#dialog-edit").dialog({
                title: 'Add Registration Number'
            });
          //  url = $("#openDialog").attr('href');
            $myDialog.dialog('open');
            
             return false;
        });
        $($myDialog).bind("dialogclose", function () {
            window.location = mainUrl;
        });

    });
   

</script>
<style>
    .webGrid a:link, .webGrid a:visited {
        color: white;
        text-decoration: none;
    }
</style>